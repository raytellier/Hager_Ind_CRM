@using Hager_Ind_CRM.Data
@model IEnumerable<Hager_Ind_CRM.ViewModels.RolePermsVM>

@{
    ViewBag.Title = "Index";
}

<h1 class="mt-4">Roles</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
    <li class="breadcrumb-item active"><a asp-area="" asp-controller="Home" asp-action="Management">Configuration</a></li>
    <li class="breadcrumb-item active">Role Management</li>
</ol>
<p>
    <a class="btn btn-primary" asp-action="Create">Create New Role</a>
</p>

<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table mr-1"></i>
        Results
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered display" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.rolePerms)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @{

                                    static string UppercaseFirst(string s)
                                    {
                                        if (string.IsNullOrEmpty(s))
                                        {
                                            return String.Empty;
                                        }
                                        return char.ToUpper(s[0]) + s.Substring(1);
                                    }

                                    List<String> companiesPerms = new List<string>();
                                    List<String> contactsPerms = new List<string>();
                                    List<String> employeesPerms = new List<string>();
                                    List<String> usersPerms = new List<string>();
                                    List<String> rolesPerms = new List<string>();
                                    List<String> listsPerms = new List<string>();
                                    foreach (var r in item.rolePerms)
                                    {
                                        if (r.Value.Contains("companies"))
                                        {
                                            string[] permName = r.Value.Split('.');
                                            companiesPerms.Add(UppercaseFirst(permName[1]));
                                        }
                                        else if (r.Value.Contains("contacts"))
                                        {
                                            string[] permName = r.Value.Split('.');
                                            contactsPerms.Add(UppercaseFirst(permName[1]));
                                        }
                                        else if (r.Value.Contains("employees"))
                                        {
                                            string[] permName = r.Value.Split('.');
                                            employeesPerms.Add(UppercaseFirst(permName[1]));
                                        }
                                        else if (r.Value.Contains("users"))
                                        {
                                            string[] permName = r.Value.Split('.');
                                            usersPerms.Add(UppercaseFirst(permName[1]));
                                        }
                                        else if (r.Value.Contains("roles"))
                                        {
                                            string[] permName = r.Value.Split('.');
                                            rolesPerms.Add(UppercaseFirst(permName[1]));
                                        }
                                        else if (r.Value.Contains("lists"))
                                        {
                                            string[] permName = r.Value.Split('.');
                                            listsPerms.Add(UppercaseFirst(permName[1]));
                                        }
                                    }

                                    if (companiesPerms.Count > 0)
                                    {
                                        <h6>Companies</h6>
                                        foreach (var p in companiesPerms)
                                        {
                                            @:  @p <br />
                                        }
                                    }
                                    if (contactsPerms.Count > 0)
                                    {
                                        <h6>Contacts</h6>
                                        foreach (var p in contactsPerms)
                                        {
                                            @:  @p <br />
                                        }
                                    }
                                    if (employeesPerms.Count > 0)
                                    {
                                        <h6>Employees</h6>
                                        foreach (var p in employeesPerms)
                                        {
                                            @:  @p <br />
                                        }
                                    }
                                    if (usersPerms.Count > 0)
                                    {
                                        <h6>User Management</h6>
                                        foreach (var p in usersPerms)
                                        {
                                            @:  @p <br />
                                        }
                                    }
                                    if (rolesPerms.Count > 0)
                                    {
                                        <h6>Role Management</h6>
                                        foreach (var p in rolesPerms)
                                        {
                                            @:  @p <br />
                                        }
                                    }
                                    if (listsPerms.Count > 0)
                                    {
                                        <h6>List Management</h6>
                                        foreach (var p in listsPerms)
                                        {
                                            @:  @p <br />
                                        }
                                    }
                                }
                            </td>
                            <td>
                                @if (item.Name != "Admin")
                                {
                                    if (User.HasClaim(CustomClaimTypes.Permission, Users.Update))
                                    {
                                        <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                    }

                                    if (User.HasClaim(CustomClaimTypes.Permission, Users.Update))
                                    {
                                        <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#dataTable').DataTable();
        });
    </script>
}
