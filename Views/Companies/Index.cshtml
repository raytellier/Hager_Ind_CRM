@using Hager_Ind_CRM.Data
@model IEnumerable<Hager_Ind_CRM.Models.Company>

@{
    ViewData["Title"] = "Index";
}

<h1 class="mt-4">Companies</h1>

<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
    <li class="breadcrumb-item active">Companies</li>
</ol>

<form asp-action="Index" method="post">
    <p>
        @{ if (User.HasClaim(CustomClaimTypes.Permission, Companies.Create))
            {
                <a class="btn btn-primary" asp-action="Create">Create New</a>
                @*<div asp-action="Merge">
                    <button type="button" class="btn btn-danger btn-sm" id="btnMerge"> Merge Selected</button>
                </div>*@
                @*<a class="btn btn-primary" type="submit">Merge Selected</a>*@
                <input class="btn btn-primary" type="submit"  value="Merge Selected"/>
                }
            }

    </p>
    <div class="card mb-4">

        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Results
        </div>
        <div class="card-body">

            <div class="table-responsive">
                <table class="table table-bordered display" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                Select
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CompanyTypes)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CredCheck)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.BillingTerms)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Phone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Website)
                            </th>
                            @*<th></th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <div class="custom-control custom-checkbox pt-2">
                                        <!--<input--> @*class="custom-control-input"*@ <!--id="selected" name="selected" value="@item.ID" type="checkbox" />-->
                                        @*<input type="hidden" name="selected" id="selected" value="@item.ID" />*@
                                        <input type="checkbox" name="YourCheckBoxes" value="@item.ID" />
                                    </div>
                                </td>
                                <td>
                                    <a class="btn btn-light" asp-action="Details" asp-route-id="@item.ID">
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </a>
                                </td>
                                <td>
                                    @{
                                        int typesCount = item.CompanyTypes.Count;
                                        if (typesCount > 0)
                                        {
                                            string firstType = item.CompanyTypes.FirstOrDefault().Type.Name;
                                            if (typesCount > 1)
                                            {
                                                string typeList = "";
                                                var c = item.CompanyTypes.ToList();
                                                for (int i = 1; i < typesCount; i++)
                                                {
                                                    typeList += c[i].Type.Name + " <br />";
                                                }
                                                <a class="" role="button" data-toggle="collapse" href="#collapseSum@(item.ID)" aria-expanded="false" aria-controls="collapseSum@(item.ID)">
                                                    @firstType <span class="badge badge-info">@typesCount</span>
                                                </a>
                                                <div class="collapse" id="collapseSum@(item.ID)">
                                                    @Html.Raw(typeList)
                                                </div>
                                            }
                                            else
                                            {
                                                @firstType
                                            }
                                        }
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CredCheck)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BillingTerms.Terms)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Phone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Website)
                                </td>
                                @*<td>
                                        @{ if (User.HasClaim(CustomClaimTypes.Permission, Companies.Update))
                                            {
                                                <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                                            }
                                        }
                                        @{ if (User.HasClaim(CustomClaimTypes.Permission, Companies.Detail))
                                            {
                                                <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.ID">Details</a>
                                            }
                                        }
                                        @{ if (User.HasClaim(CustomClaimTypes.Permission, Companies.Delete))
                                            {
                                                <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                                            }
                                        }
                                    </td>*@
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        @*<input id="isSelected" name="isSelected" type="hidden" value="" />*@


    </div>
</form>
@section Scripts {
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
    @*<script src="~/js/CompanyMerge1.js"></script>*@
    <script type="text/javascript">
        $(document).ready(function () {
            $.fn.dataTable.ext.order['dom-checkbox'] = function (settings, col) {
                return this.api().column(col, { order: 'index' }).nodes().map(function (td, i) {
                    return $('input', td).prop('checked') ? '1' : '0';
                });
            };
            @*These have to match the amount of columns there are, null if its not a boolean and { "orderDataType": "dom-checkbox" } in the boolean column*@
            $('#dataTable').DataTable({
                "columns": [
                    null,
                    null,
                    { "orderDataType": "dom-checkbox" },
                    null,
                    null,
                    null,
                ]
            });
        });

    </script>

}
