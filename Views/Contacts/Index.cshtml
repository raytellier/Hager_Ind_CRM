@using Hager_Ind_CRM.Data
@model IEnumerable<Hager_Ind_CRM.Models.Contact>

@{
    ViewData["Title"] = "Index";
}

<h1 class="mt-4">Contacts</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
    <li class="breadcrumb-item active">Contacts</li>
</ol>
<p>
    @{ if (User.HasClaim(CustomClaimTypes.Permission, Contacts.Create))
        {
            <a class="btn btn-primary" asp-action="Create">Create New</a>
        }
    }
</p>
<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table mr-1"></i>
        Results
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered display" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.JobTitle)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CellPhone)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Company.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ContactCatagories)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.WorkPhone)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Active)
                        </th>
                        @*<th></th>*@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a class="btn btn-light" asp-action="Details" asp-route-id="@item.ID">
                                    @Html.DisplayFor(modelItem => item.FullName)
                                </a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.JobTitle)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CellPhone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Company.Name)
                            </td>
                            <td>
                                @{
                                    int categoriesCount = item.ContactCatagories.Count;
                                    if (categoriesCount > 0)
                                    {
                                        string firstCategory = item.ContactCatagories.FirstOrDefault().Catagory.Name;
                                        if (categoriesCount > 1)
                                        {
                                            string categoryList = "";
                                            var c = item.ContactCatagories.ToList();
                                            for (int i = 1; i < categoriesCount; i++)
                                            {
                                                categoryList += c[i].Catagory.Name + " <br />";
                                            }
                                            <a class="" role="button" data-toggle="collapse" href="#collapseSum@(item.ID)" aria-expanded="false" aria-controls="collapseSum@(item.ID)">
                                                @firstCategory <span class="badge badge-info">@categoriesCount</span>
                                            </a>
                                            <div class="collapse" id="collapseSum@(item.ID)">
                                                @Html.Raw(categoryList)
                                            </div>
                                        }
                                        else
                                        {
                                            @firstCategory
                                        }
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.WorkPhone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Active)
                                @{if (item.Active == true)
                                    {
                                        <div hidden="hidden">
                                            Active
                                        </div>
                                    }
                                }
                            </td>
                            @*<td>
                                    @{ if (User.HasClaim(CustomClaimTypes.Permission, Contacts.Update))
                                        {
                                            <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                                        }
                                    }
                                    @{ if (User.HasClaim(CustomClaimTypes.Permission, Contacts.Detail))
                                        {
                                            <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.ID">Details</a>
                                        }
                                    }
                                    @{ if (User.HasClaim(CustomClaimTypes.Permission, Contacts.Delete))
                                        {
                                            <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                                        }
                                    }
                                </td>*@
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.7.0/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
    <style>
        div.dt-buttons {
            float: right;
            margin-left: 10px;
        }
    </style>
    <script type="text/javascript">
        //$(document).ready(function () {
        //    $('#dataTable').DataTable();
        //});
        $.fn.dataTable.ext.buttons.alert = {
            className: 'btn btn-primary',

            action: function (e, dt, node, config) {
                dt.search('').draw();
            }
        };
        $(document).ready(function () {
            $.fn.dataTable.ext.order['dom-checkbox'] = function (settings, col) {
                return this.api().column(col, { order: 'index' }).nodes().map(function (td, i) {
                    return $('input', td).prop('checked') ? '1' : '0';
                });
            };
            @*These have to match the amount of columns there are, null if its not a boolean and { "orderDataType": "dom-checkbox" } in the boolean column*@
            var active = true;
            var table = $('#dataTable').DataTable({
                "stateSave": true,
                "stateDuration": -1,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'alert',
                        text: 'Clear'
                    },
                    {
                        attr: { id: 'buttonID' },
                        className: 'btn btn-primary',
                        text: 'Active Filter Off',
                        action: function () {
                            if (active) {
                                table.column(7).search('').draw()
                                document.querySelector('#buttonID').textContent = 'Active Filter On';
                            }
                            else {
                                table.column(7).search('active').draw()
                                document.querySelector('#buttonID').textContent = 'Active Filter Off';
                            }
                            active = !active
                        }
                    }
                ],
                "columns": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    { "orderDataType": "dom-checkbox"}
                ]
            });
            table.column(7).search('active').draw()
        });

    </script>
}
