@using Hager_Ind_CRM.Data
@model IEnumerable<Hager_Ind_CRM.Models.Employee>

@{
    ViewData["Title"] = "Index";
}

<h1 class="mt-4">Employees</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
    <li class="breadcrumb-item active">Employees</li>
</ol>
<p>
    @{ if (User.HasClaim(CustomClaimTypes.Permission, Employees.Create))
        {
            <a class="btn btn-primary" asp-action="Create">Create New</a>
        }
    }
</p>


<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table mr-1"></i>
        Results
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered display" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.JobPosition)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmploymentType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CellPhone)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.KeyFobNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Active)
                        </th>
                        @*<th></th>*@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a class="btn btn-light" asp-action="Details" asp-route-id="@item.ID">
                                    @Html.DisplayFor(modelItem => item.FullName)
                                </a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.JobPosition.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EmploymentType.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CellPhone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.KeyFobNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Active)
                            </td>
                            @*<td>
                                    <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                                    <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.ID">Details</a>
                                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                                </td>*@
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@{ if (User.HasClaim(CustomClaimTypes.Permission, Employees.Create))
    {
        <div>
            <form asp-action="InsertFromExcel" asp-controller="Employees" method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label class="control-label">Upload Excel File:</label>
                    <input type="file" class="" name="theExcel" /><br />
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <input type="submit" value="Upload Data" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <a asp-action="DEmployees" class="btn btn-info float-right">Download Employee List</a>
                </div>
            </form>
        </div>
    }
}
@section Scripts {
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
    @* Must enter this whole script if there is a boolean in the index datatable *@
<script type="text/javascript">
        $(document).ready(function () {
            $.fn.dataTable.ext.order['dom-checkbox'] = function (settings, col) {
                return this.api().column(col, { order: 'index' }).nodes().map(function (td, i) {
                    return $('input', td).prop('checked') ? '1' : '0';
                });
            };
            @*These have to match the amount of columns there are, null if its not a boolean and { "orderDataType": "dom-checkbox" } in the boolean column*@
            $('#dataTable').DataTable({
                "columns": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    { "orderDataType": "dom-checkbox" }
                ]
            });
        });

</script>
}
